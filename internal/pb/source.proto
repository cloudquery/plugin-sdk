syntax = "proto3";
package proto;
option go_package = "/pb";
import "internal/pb/base.proto";
import "google/protobuf/timestamp.proto";

service Source {
  // Get the current protocol version of the plugin. This helps
  // get the right message about upgrade/downgrade of cli and/or plugin.
  // Also, on the cli side it can try to upgrade/downgrade the protocol if cli supports it.
  rpc GetProtocolVersion(GetProtocolVersion.Request) returns (GetProtocolVersion.Response);
  // Get the name of the plugin
  rpc GetName(GetName.Request) returns (GetName.Response);
  // Get the current version of the plugin
  rpc GetVersion(GetVersion.Request) returns (GetVersion.Response);
  // Get all tables the source plugin supports
  rpc GetTables(GetTables.Request) returns (GetTables.Response);
  // GetSyncSummary returns the latest sync summary of the source plugin. we don't want to send the summary on
  // every sync request.
  rpc GetSyncSummary(GetSyncSummary.Request) returns (GetSyncSummary.Response);
  // Fetch resources
  rpc Sync(Sync.Request) returns (stream Sync.Response);
}

message Sync {
  message Request {
    bytes spec = 1;
    // sync timestamp
    google.protobuf.Timestamp timestamp = 2;
  }
  message Response {
    // marshalled *schema.Resources
    bytes resource = 1;
  }
}

message GetSyncSummary {
  message Request {}
  message Response {
    // marshalled *schema.SyncSummary
    bytes summary = 1;
  }
}


message GetTables {
  message Request {}
  message Response {
    string name = 1;
    string version = 2;
    // Marshalled []*schema.Table
    bytes tables = 3;
  }
}

